@model Proyecto.ViewsModels.ProductoFormViewModel
@{
    ViewBag.Title = "ProductoForm";
}

<h2>Mantenimiento de Productos</h2>
@using (Html.BeginForm("Guardar", "Producto"))


{
    @Html.AntiForgeryToken();
<div class="form-horizontal">
    <h4>Adicion / Edicion </h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Producto.Codigo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Producto.Codigo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Producto.Codigo, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Producto.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Producto.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Producto.Descripcion, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Producto.Unidad.UnidadMedidaId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Producto.UnidadMedidaId, new SelectList(Model.Unidads, "UnidadMedidaId", "Descripcion", "Seleccione una clasificacion"),
                                 new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Producto.UnidadMedidaId, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Producto.ClasificacionProducto.ClasificacionProductoId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Producto.ClasificacionProductoId, new SelectList(Model.ClasificacionProductos, "ClasificacionProductoId", "Descripcion", "Seleccione una clasificacion"),
                                 new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Producto.ClasificacionProductoId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Producto.FechaIngreso, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Producto.FechaIngreso, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Producto.FechaIngreso, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Producto.Precio, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Producto.Precio)
                @Html.ValidationMessageFor(model => model.Producto.Precio, "", new { @class = "text-danger" })
            </div>

        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Producto.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Producto.Estado)
                @Html.ValidationMessageFor(model => model.Producto.Estado, "", new { @class = "text-danger" })
            </div>

        </div>
    </div>
    <div class="form-group">
        @Html.HiddenFor(model => model.Producto.ProductoId)
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Guardar" class="btn btn-primary" />
        </div>
    </div>
</div>
}
<div>
    @Html.ActionLink("Regresar", "Index", null, new { @class = "btn btn-secondary" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}